version: "3.9"

name: pms-prod

services:
  db:
    image: postgres:16-alpine
    env_file:
      - apps/api/.env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    image: node:20.18.0-slim
    depends_on:
      db:
        condition: service_healthy
    working_dir: /app
    command: >-
      sh -c "apt-get update -y && apt-get install -y openssl && \
      corepack enable && corepack prepare yarn@1.22.22 --activate &&
      yarn install --frozen-lockfile --production=false &&
      yarn --cwd apps/api prisma:generate &&
      yarn --cwd apps/api build &&
      yarn --cwd apps/api prisma:deploy &&
      if [ \"$SEED\" = \"true\" ]; then yarn --cwd apps/api prisma:seed; fi &&
      yarn --cwd apps/api start:prod"
    env_file:
      - apps/api/.env
    environment:
      NODE_ENV: production
      PORT: "3001"
      SEED: ${SEED:-}
    ports:
      - "3001:3001"
    volumes:
      - .:/app
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'node -e "require(''http'').get(''http://localhost:3001'', r => process.exit(r.statusCode===200?0:1)).on(''error'', ()=>process.exit(1))" ',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  seed:
    image: node:20.18.0-slim
    profiles: ["seed"]
    depends_on:
      db:
        condition: service_healthy
    working_dir: /app
    command: >-
      sh -c "apt-get update -y && apt-get install -y openssl && \
      corepack enable && corepack prepare yarn@1.22.22 --activate &&
      yarn install --frozen-lockfile --production=false &&
      yarn --cwd apps/api prisma:generate &&
      yarn --cwd apps/api prisma:deploy &&
      yarn --cwd apps/api prisma:seed"
    env_file:
      - apps/api/.env
    environment:
      NODE_ENV: production
    volumes:
      - .:/app
    restart: "no"

  web:
    image: node:20.18.0-slim
    depends_on:
      api:
        condition: service_started
    working_dir: /app
    command: >-
      sh -c "corepack enable && corepack prepare yarn@1.22.22 --activate &&
      yarn install --frozen-lockfile --production=false &&
      yarn --cwd apps/web run next build &&
      yarn --cwd apps/web start"
    env_file:
      - apps/web/.env
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001}
      PORT: "3000"
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'node -e "require(''http'').get(''http://localhost:3000'', r => process.exit(r.statusCode===200?0:1)).on(''error'', ()=>process.exit(1))" ',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
